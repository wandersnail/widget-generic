plugins {
    id 'com.android.library'
    id 'signing'
    id 'maven-publish'
}

def lib_version = '1.1.0'
def user_name = 'wandersnail'
def lib_group = 'cn.wandersnail'
def lib_artifact = 'widget-generic'
def lib_description = 'Some customized views commonly used'
def lib_website = 'https://github.com/wandersnail/widget-generic'

group = lib_group
version = lib_version

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "$lib_version"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compileOnly "androidx.appcompat:appcompat:$appcompat_version"
    compileOnly "androidx.recyclerview:recyclerview:$recyclerview_version"
    compileOnly "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

tasks.register('javadoc', Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = lib_group
            artifactId = lib_artifact
            version = lib_version
            description = lib_description

            artifact "$buildDir/outputs/aar/${project.name}-release.aar"

            // 增加 sourcesJar、javadocJar 任务
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = lib_artifact
                description = lib_description
                url = lib_website

                scm {
                    url = lib_website
                    connection = "scm:git:${lib_website}.git"
                    developerConnection = "scm:git:${lib_website}.git"
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = user_name
                        name = 'Zeng Fansheng'
                        email = 'bingmo977@qq.com'
                    }
                }
            }
        }
    }

    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
    properties.load(inputStream)
    def ossrhUsername = properties.containsKey('ossrhUsername') ? properties['ossrhUsername'] : ''
    def ossrhPassword = properties.containsKey('ossrhPassword') ? properties['ossrhPassword'] : ''
    if (ossrhUsername != null && ossrhPassword != null) {
        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications.release
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}